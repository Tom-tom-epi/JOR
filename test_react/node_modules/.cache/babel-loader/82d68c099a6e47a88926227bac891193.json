{"ast":null,"code":"var _jsxFileName = \"/var/www/html/test_react/test_react/src/components/caractForm.js\";\nimport React, { Component } from 'react';\nimport FormValidator from '../validation/FormValidator';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass FormCaract extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = event => {\n      event.preventDefault();\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault(); // console.log(this.props.mana);\n\n      const validation = this.validator.validate(this.state);\n      this.setState({\n        validation\n      });\n      this.submitted = true;\n\n      if (validation.isValid) {\n        console.log(\"Validated Caract Form !\");\n        axios.defaults.xsrfCookieName = 'csrftoken';\n        axios.defaults.xsrfHeaderName = 'X-CSRFToken';\n        axios.get(`http://127.0.0.1:8000/user/update_caract/` + this.state.physic + \"/\" + this.state.mental + \"/\" + this.state.social + \"/\" + this.props.id_desc + \"/\").then(res => {\n          console.log(res);\n        }).then(res => {\n          this.props.handlerCaract(); // Update the parent Description until Group is update \n        });\n      }\n    };\n\n    this.validator = new FormValidator([{\n      field: 'physic',\n      method: 'isEmpty',\n      validWhen: false,\n      message: 'Enter physique'\n    }, {\n      field: 'mental',\n      method: 'isEmpty',\n      validWhen: false,\n      message: 'Enter mental'\n    }, {\n      field: 'social',\n      method: 'isEmpty',\n      validWhen: false,\n      message: 'Enter social'\n    }]);\n    this.state = {\n      health: this.props.physic,\n      maxHealth: this.props.mental,\n      mana: this.props.social,\n      validation: this.validator.valid()\n    };\n    this.submitted = false;\n  }\n\n  componentWillReceiveProps(props) {\n    this.setState({\n      physic: this.props.physic,\n      mental: this.props.mental,\n      social: this.props.social\n    });\n  }\n\n  render() {\n    let validation = this.submitted ? this.validator.validate(this.state) : this.state.validation;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container form_caract form\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"registrationForm\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Change stats\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: validation.physic.isInvalid ? 'has-error' : null,\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"physic\",\n                  children: \"Physique\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  defaultValue: this.props.physic,\n                  type: \"integer\",\n                  className: \"form-control\",\n                  name: \"physic\",\n                  onChange: this.handleInputChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 25\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"help-block\",\n                  children: validation.physic.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 156\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: validation.mental.isInvalid ? 'has-error' : null,\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"mental\",\n                  children: \"Mental\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  defaultValue: this.props.mental,\n                  type: \"integer\",\n                  className: \"form-control\",\n                  name: \"mental\",\n                  onChange: this.handleInputChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 25\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"help-block\",\n                  children: validation.mental.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 156\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: validation.social.isInvalid ? 'has-error' : null,\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"social\",\n                  children: \"Social\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  defaultValue: this.props.social,\n                  type: \"integer\",\n                  className: \"form-control\",\n                  name: \"social\",\n                  onChange: this.handleInputChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 25\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"help-block\",\n                  children: validation.social.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 156\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: this.handleFormSubmit,\n                className: \"btn btn-primary\",\n                children: \" Changer caract\\xE9ristiques \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 1\n    }, this);\n  }\n\n}\n\nexport default FormCaract;","map":{"version":3,"sources":["/var/www/html/test_react/test_react/src/components/caractForm.js"],"names":["React","Component","FormValidator","axios","FormCaract","constructor","props","handleInputChange","event","preventDefault","setState","target","name","value","handleFormSubmit","validation","validator","validate","state","submitted","isValid","console","log","defaults","xsrfCookieName","xsrfHeaderName","get","physic","mental","social","id_desc","then","res","handlerCaract","field","method","validWhen","message","health","maxHealth","mana","valid","componentWillReceiveProps","render","isInvalid"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport FormValidator from '../validation/FormValidator';\nimport axios from 'axios';\n\nclass FormCaract extends Component{\nconstructor(props){\nsuper(props);\nthis.validator = new FormValidator([{\n    field: 'physic',\n    method: 'isEmpty',\n    validWhen: false,\n    message: 'Enter physique'\n}, {\n    field: 'mental',\n    method: 'isEmpty',\n    validWhen: false,\n    message: 'Enter mental'\n}, {\n    field: 'social',\n    method: 'isEmpty',\n    validWhen: false,\n    message: 'Enter social'\n}\n]);\n\nthis.state = {\nhealth: this.props.physic,\nmaxHealth: this.props.mental,\nmana: this.props.social,\nvalidation: this.validator.valid()\n}\nthis.submitted = false;\n}\n\ncomponentWillReceiveProps(props) {\n    this.setState({\n        physic: this.props.physic,\n        mental: this.props.mental,\n        social: this.props.social\n    });\n}\n\nhandleInputChange = event => {\nevent.preventDefault();\nthis.setState({\n[event.target.name]: event.target.value,\n});\n}\nhandleFormSubmit = event => {\nevent.preventDefault();\n// console.log(this.props.mana);\nconst validation = this.validator.validate(this.state);\nthis.setState({\nvalidation\n});\nthis.submitted = true;\nif(validation.isValid) {\n    console.log(\"Validated Caract Form !\");\n\n    axios.defaults.xsrfCookieName = 'csrftoken';\n    axios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\n    axios.get(`http://127.0.0.1:8000/user/update_caract/` \n    + this.state.physic + \"/\" \n    + this.state.mental + \"/\" \n    + this.state.social + \"/\"\n    + this.props.id_desc + \"/\")\n    .then(res => {\n        console.log(res);\n    }).then(res => {\n        this.props.handlerCaract();\n        // Update the parent Description until Group is update \n    })\n}\n}\nrender() {\nlet validation = this.submitted ?this.validator.validate(this.state) : this.state.validation\nreturn (\n<div>\n    <div className=\"container form_caract form\">\n        <div className=\"row\">\n            <div>\n                <form className=\"registrationForm\">\n                <h2>Change stats</h2>\n                    <div className={validation.physic.isInvalid ? 'has-error' : null}>\n                        <label htmlFor=\"physic\">Physique</label>\n                        <input defaultValue={this.props.physic} type=\"integer\" className=\"form-control\" name=\"physic\" onChange={this.handleInputChange} /> <span className=\"help-block\">{validation.physic.message}</span> \n                    </div>\n                    \n                    <div className={validation.mental.isInvalid ? 'has-error' : null}>\n                        <label htmlFor=\"mental\">Mental</label>\n                        <input defaultValue={this.props.mental} type=\"integer\" className=\"form-control\" name=\"mental\" onChange={this.handleInputChange} /> <span className=\"help-block\">{validation.mental.message}</span> \n                    </div>\n               \n                    <div className={validation.social.isInvalid ? 'has-error' : null}>\n                        <label htmlFor=\"social\">Social</label>\n                        <input defaultValue={this.props.social} type=\"integer\" className=\"form-control\" name=\"social\" onChange={this.handleInputChange} /> <span className=\"help-block\">{validation.social.message}</span> \n                    </div>\n                    \n                    \n                <button onClick={this.handleFormSubmit} className=\"btn btn-primary\"> Changer caractéristiques </button>\n                </form>\n            </div>\n        </div>\n    </div>\n\n</div>\n)\n}\n}\nexport default FormCaract;"]},"metadata":{},"sourceType":"module"}