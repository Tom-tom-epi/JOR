{"ast":null,"code":"var _jsxFileName = \"/var/www/html/test_react/test_react/src/components/description.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport FormItem from './itemForm';\nimport FormSpell from './spellForm';\nimport FormStats from './statsForm';\nimport $ from 'jquery';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Description extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getItems = () => {\n      var listItems = [];\n\n      for (let i = 0; i < this.state.items.length; i++) {\n        listItems.push(this.state.items[i]);\n      }\n\n      return listItems;\n    };\n\n    this.getSpells = () => {\n      var listSpells = [];\n\n      for (let i = 0; i < this.state.spells.length; i++) {\n        listSpells.push(this.state.spells[i]);\n      }\n\n      return listSpells;\n    };\n\n    this.handler = this.handler.bind(this);\n    this.state = {\n      spells: [],\n      items: [],\n      currentUser: [],\n      update: false\n    };\n  }\n\n  handlerStats() {\n    this.handlerGroup;\n  }\n\n  handler() {\n    this.setState({\n      update: !this.state.update\n    });\n  }\n\n  fetchData() {\n    axios.defaults.xsrfCookieName = 'csrftoken';\n    axios.defaults.xsrfHeaderName = 'X-CSRFToken';\n    axios.get(`http://127.0.0.1:8000/user/getSpells/` + this.props.id_desc).then(res => {\n      //   Update self\n      //   And update the group (child component)\n      this.setState({\n        spells: res.data\n      }); // console.log(this.state.spells);      \n    });\n    axios.get(`http://127.0.0.1:8000/user/getInventory/` + this.props.id_desc).then(res => {\n      //   Update self\n      //   And update the group (child component)\n      this.setState({\n        items: res.data\n      }); // console.log(this.state.items);         \n    });\n  }\n\n  getCurrentUser() {\n    this.props.users.forEach(element => {\n      if (element['id_player'] == this.props.id_desc) {\n        let currentUser = Object.entries(element);\n        let array = [];\n\n        for (let i = 0; i < currentUser.length; i++) {\n          if (currentUser[i][0] == \"health\" || currentUser[i][0] == \"mana\" || currentUser[i][0] == \"maxHealth\" || currentUser[i][0] == \"maxMana\") {\n            array[currentUser[i][0]] = currentUser[i][1];\n          }\n        }\n\n        this.setState({\n          currentUser: array\n        }, function () {\n          console.log(this.state.currentUser['health']);\n        });\n      }\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    // Update the component if parent state is updated\n    if (this.props.id_desc !== prevProps.id_desc || this.state.update !== prevState.update) {\n      this.fetchData();\n    }\n  }\n\n  componentDidMount() {\n    this.fetchData();\n    this.getScripts();\n    this.getCurrentUser();\n  }\n\n  getScripts() {\n    var button_form_item = document.getElementsByClassName('btn_form_item');\n    var button_form_spell = document.getElementsByClassName('btn_form_spell');\n    var form_item = document.getElementsByClassName('form_item');\n    var form_spell = document.getElementsByClassName('form_spell');\n    var form_character = document.getElementsByClassName('form_character');\n    var card_group = document.getElementsByClassName('card_group');\n    var forms = document.getElementsByClassName('form');\n    $(button_form_item).on('click', function () {\n      if ($(form_character).hasClass('displayed')) {\n        $(form_character).removeClass('displayed');\n      } else if ($(form_spell).hasClass('displayed')) {\n        $(form_spell).removeClass('displayed');\n      }\n\n      if ($(form_item).hasClass(\"displayed\")) {\n        $(form_item).removeClass(\"displayed\");\n      } else {\n        $(form_item).addClass(\"displayed\");\n      }\n    });\n    $(card_group).on('click', function () {\n      if ($(form_item).hasClass('displayed')) {\n        $(form_item).removeClass('displayed');\n      } else if ($(form_spell).hasClass('displayed')) {\n        $(form_spell).removeClass('displayed');\n      }\n    });\n    $(button_form_spell).on('click', function () {\n      if ($(form_character).hasClass('displayed')) {\n        $(form_character).removeClass('displayed');\n      } else if ($(form_item).hasClass('displayed')) {\n        $(form_item).removeClass('displayed');\n      }\n\n      if ($(form_spell).hasClass(\"displayed\")) {\n        $(form_spell).removeClass(\"displayed\");\n      } else {\n        $(form_spell).addClass(\"displayed\");\n      }\n    });\n  }\n\n  render() {\n    var items = this.getItems();\n    var spells = this.getSpells();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"description\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn_form_stats\",\n        children: \"Change stats\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn_form_caract\",\n        children: \"Change caract\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn_form_item\",\n        children: \"Add item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn_form_spell\",\n        children: \"Add spell\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item_content\",\n        children: items.map((item, i) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item_box\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"item-name\",\n              children: item.itemName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"item-race\",\n              children: item.itemEffect\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"item-spe\",\n              children: item.type_object\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"item-nbr\",\n              children: item.nbr\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 31\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 27\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spell_content\",\n        children: spells.map((spell, i) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"spell_box\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-name\",\n              children: spell.spellName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-race\",\n              children: spell.spellEffect\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 31\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 27\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FormItem, {\n        id_desc: this.props.id_desc,\n        handler: this.handler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(FormSpell, {\n        id_desc: this.props.id_desc,\n        handler: this.handler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(FormStats, {\n        id_desc: this.props.id_desc,\n        handlerStats: this.handlerStats,\n        health: this.state.currentUser['health'],\n        maxHealth: this.state.currentUser['maxHealth'],\n        mana: this.state.currentUser['mana'],\n        maxMana: this.state.currentUser['maxMana']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Description;","map":{"version":3,"sources":["/var/www/html/test_react/test_react/src/components/description.js"],"names":["React","axios","FormItem","FormSpell","FormStats","$","Description","Component","constructor","props","getItems","listItems","i","state","items","length","push","getSpells","listSpells","spells","handler","bind","currentUser","update","handlerStats","handlerGroup","setState","fetchData","defaults","xsrfCookieName","xsrfHeaderName","get","id_desc","then","res","data","getCurrentUser","users","forEach","element","Object","entries","array","console","log","componentDidUpdate","prevProps","prevState","snapshot","componentDidMount","getScripts","button_form_item","document","getElementsByClassName","button_form_spell","form_item","form_spell","form_character","card_group","forms","on","hasClass","removeClass","addClass","render","map","item","itemName","itemEffect","type_object","nbr","spell","spellName","spellEffect"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport FormItem from './itemForm';\nimport FormSpell from './spellForm';\nimport FormStats from './statsForm';\nimport $ from 'jquery';\n\nclass Description extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handler = this.handler.bind(this);\n    this.state = {\n      spells: [],\n      items: [],\n      currentUser: [],\n      update: false\n    };\n  }\n\n\n  handlerStats() {\n    this.handlerGroup;\n  }\n\n  handler() {\n    this.setState({\n      update: !this.state.update\n    })\n  }\n  \n  fetchData() {\n    axios.defaults.xsrfCookieName = 'csrftoken';\n    axios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\n    axios.get(`http://127.0.0.1:8000/user/getSpells/`+ this.props.id_desc)\n    .then(res => {\n      //   Update self\n      //   And update the group (child component)\n      this.setState({ spells: res.data });  \n      // console.log(this.state.spells);      \n    })\n    axios.get(`http://127.0.0.1:8000/user/getInventory/`+ this.props.id_desc)\n      .then(res => {\n        //   Update self\n        //   And update the group (child component)\n        this.setState({ items: res.data });\n        // console.log(this.state.items);         \n    })\n  }\n\n  getCurrentUser() {\n    this.props.users.forEach(element => {\n        if(element['id_player'] == this.props.id_desc) {\n          let currentUser = Object.entries(element);\n          let array = [];\n          for(let i = 0; i < currentUser.length; i++) {\n            if(currentUser[i][0] == \"health\" || currentUser[i][0] == \"mana\"\n            || currentUser[i][0] == \"maxHealth\" || currentUser[i][0] == \"maxMana\") {\n              array[currentUser[i][0]] = currentUser[i][1];\n            }\n          }\n          this.setState({ currentUser: array }, function() {\n            console.log(this.state.currentUser['health']);\n          });\n        }\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    // Update the component if parent state is updated\n    if(this.props.id_desc !== prevProps.id_desc || this.state.update !== prevState.update) {\n      this.fetchData();\n    }\n}\n\n  componentDidMount() {\n    this.fetchData();\n    this.getScripts();\n    this.getCurrentUser();\n  }\n\n  getScripts() {\n    var button_form_item = document.getElementsByClassName('btn_form_item');\n    var button_form_spell = document.getElementsByClassName('btn_form_spell');\n    var form_item = document.getElementsByClassName('form_item');\n    var form_spell = document.getElementsByClassName('form_spell');\n    var form_character = document.getElementsByClassName('form_character');\n    var card_group = document.getElementsByClassName('card_group');\n    var forms = document.getElementsByClassName('form');\n    \n    $(button_form_item).on('click', function() {\n        if($(form_character).hasClass('displayed')) {\n            $(form_character).removeClass('displayed');\n        }else if($(form_spell).hasClass('displayed')) {\n          $(form_spell).removeClass('displayed');\n        }\n\n        if($(form_item).hasClass(\"displayed\")) {\n            $(form_item).removeClass(\"displayed\");\n        }else {\n            $(form_item).addClass(\"displayed\");\n        }\n    })\n\n  $(card_group).on('click', function() {\n    if($(form_item).hasClass('displayed')) {\n      $(form_item).removeClass('displayed');\n    }else if($(form_spell).hasClass('displayed')) {\n      $(form_spell).removeClass('displayed');\n    }\n  })\n\n  $(button_form_spell).on('click', function() {\n    if($(form_character).hasClass('displayed')) {\n        $(form_character).removeClass('displayed');\n    }else if($(form_item).hasClass('displayed')) {\n      $(form_item).removeClass('displayed');\n    }\n\n    if($(form_spell).hasClass(\"displayed\")) {\n        $(form_spell).removeClass(\"displayed\");\n    }else {\n        $(form_spell).addClass(\"displayed\");\n    }\n  })\n}\n  \n   \n\n  getItems = () => {\n    var listItems = [];\n    for(let i = 0; i < this.state.items.length; i++) {\n     listItems.push(this.state.items[i]);\n    }\n    return (\n      listItems\n    )\n  };\n  getSpells = () => {\n    var listSpells = [];\n    for(let i = 0; i < this.state.spells.length; i++) {\n     listSpells.push(this.state.spells[i]);\n    }\n    return (\n      listSpells\n    )\n  };\n  \n\n  \n    \n  \n    \n\n\n\n\n    render() {\n      var items = this.getItems();\n      var spells = this.getSpells();\n      return (\n        <div className='description'>\n            <button className=\"btn_form_stats\">Change stats</button>\n            <button className=\"btn_form_caract\">Change caract</button>\n            <button className=\"btn_form_item\">Add item</button>\n            <button className=\"btn_form_spell\">Add spell</button>\n            <div className=\"item_content\">\n              {items.map((item, i) => {\n                      return (\n                          <div className=\"item_box\" key={i}>\n                              <div className=\"item-name\">{item.itemName}</div>\n                              <div className=\"item-race\">{item.itemEffect}</div>\n                              <div className=\"item-spe\">{item.type_object}</div>\n                              <div className=\"item-nbr\">{item.nbr}</div>\n                          </div>\n              )})}\n            </div>\n            <div className=\"spell_content\">\n              {spells.map((spell, i) => {\n                      return (\n                          <div className=\"spell_box\" key={i}>\n                              <div className=\"card-name\">{spell.spellName}</div>\n                              <div className=\"card-race\">{spell.spellEffect}</div>\n                          </div>\n              )})}\n            </div>\n              <FormItem id_desc={this.props.id_desc} handler={this.handler}/>\n              <FormSpell id_desc={this.props.id_desc} handler={this.handler}/>\n              <FormStats \n              id_desc={this.props.id_desc} \n              handlerStats={this.handlerStats}\n              health={this.state.currentUser['health']}\n              maxHealth={this.state.currentUser['maxHealth']}\n              mana={this.state.currentUser['mana']}\n              maxMana={this.state.currentUser['maxMana']}\n              />\n        </div>\n      );\n    }\n  }\n\nexport default Description;"]},"metadata":{},"sourceType":"module"}