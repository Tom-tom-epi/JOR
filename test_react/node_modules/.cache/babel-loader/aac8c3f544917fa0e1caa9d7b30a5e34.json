{"ast":null,"code":"var _jsxFileName = \"/var/www/html/test_react/test_react/src/components/description.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport FormItem from './itemForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Description extends React.Component {\n  constructor() {\n    super();\n\n    this.getItems = () => {\n      var listItems = [];\n\n      for (let i = 0; i < this.state.items.length; i++) {\n        listItems.push(this.state.items[i]);\n      }\n\n      return listItems;\n    };\n\n    this.getSpells = () => {\n      var listSpells = [];\n\n      for (let i = 0; i < this.state.spells.length; i++) {\n        listSpells.push(this.state.spells[i]);\n      }\n\n      return listSpells;\n    };\n\n    this.state = {\n      spells: [],\n      items: [],\n      showItemForm: false,\n      update: false\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    // Update the component if parent state is updated\n    if (this.props.id_desc !== prevProps.id_desc) {\n      axios.defaults.xsrfCookieName = 'csrftoken';\n      axios.defaults.xsrfHeaderName = 'X-CSRFToken';\n      axios.get(`http://127.0.0.1:8000/user/getSpells/` + this.props.id_desc).then(res => {\n        //   Update self\n        //   And update the group (child component)\n        this.setState({\n          spells: res.data\n        });\n        console.log(this.state.spells);\n      });\n      axios.get(`http://127.0.0.1:8000/user/getInventory/` + this.props.id_desc).then(res => {\n        //   Update self\n        //   And update the group (child component)\n        this.setState({\n          items: res.data\n        });\n        console.log(this.state.items);\n      });\n    }\n  }\n\n  componentDidMount() {\n    axios.defaults.xsrfCookieName = 'csrftoken';\n    axios.defaults.xsrfHeaderName = 'X-CSRFToken';\n    axios.get(`http://127.0.0.1:8000/user/getSpells/` + this.props.id_desc).then(res => {\n      //   Update self\n      //   And update the group (child component)\n      this.setState({\n        spells: res.data\n      });\n      console.log(this.state.spells);\n    });\n    axios.get(`http://127.0.0.1:8000/user/getInventory/` + this.props.id_desc).then(res => {\n      //   Update self\n      //   And update the group (child component)\n      this.setState({\n        items: res.data\n      });\n      console.log(this.state.items);\n    });\n  } // update = () => {\n  //   this.set\n  // }\n\n\n  showItemForm() {\n    this.setState({\n      showItemForm: !this.state.showItemForm\n    });\n  }\n\n  render() {\n    var items = this.getItems();\n    var spells = this.getSpells();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"description\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.props.id_desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.showItemForm.bind(this),\n        children: \"Add item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this), items.map((item, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item_box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-name\",\n            children: item.itemName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-race\",\n            children: item.itemEffect\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-spe\",\n            children: item.type_object\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-spe\",\n            children: item.nbr\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 29\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this);\n      }), spells.map((spell, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spell_box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-name\",\n            children: spell.spellName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-race\",\n            children: spell.spellEffect\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 29\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this);\n      }), this.state.showItemForm ? /*#__PURE__*/_jsxDEV(FormItem, {\n        id_desc: this.props.id_desc,\n        setState: this.setState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Description;","map":{"version":3,"sources":["/var/www/html/test_react/test_react/src/components/description.js"],"names":["React","axios","FormItem","Description","Component","constructor","getItems","listItems","i","state","items","length","push","getSpells","listSpells","spells","showItemForm","update","componentDidUpdate","prevProps","prevState","snapshot","props","id_desc","defaults","xsrfCookieName","xsrfHeaderName","get","then","res","setState","data","console","log","componentDidMount","render","bind","map","item","itemName","itemEffect","type_object","nbr","spell","spellName","spellEffect"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport FormItem from './itemForm';\nclass Description extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      spells: [],\n      items: [],\n      showItemForm: false,\n      update: false\n    };\n  }\n  \n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n\n    // Update the component if parent state is updated\n    if(this.props.id_desc !== prevProps.id_desc) {\n      axios.defaults.xsrfCookieName = 'csrftoken';\n      axios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\n      axios.get(`http://127.0.0.1:8000/user/getSpells/`+ this.props.id_desc)\n      .then(res => {\n        //   Update self\n        //   And update the group (child component)\n        this.setState({ spells: res.data });  \n        console.log(this.state.spells);      \n    })\n    axios.get(`http://127.0.0.1:8000/user/getInventory/`+ this.props.id_desc)\n      .then(res => {\n        //   Update self\n        //   And update the group (child component)\n        this.setState({ items: res.data });\n        console.log(this.state.items);         \n    })\n    }\n}\n\n  componentDidMount() {\n    axios.defaults.xsrfCookieName = 'csrftoken'\n    axios.defaults.xsrfHeaderName = 'X-CSRFToken'\n    axios.get(`http://127.0.0.1:8000/user/getSpells/`+ this.props.id_desc)\n      .then(res => {\n        //   Update self\n        //   And update the group (child component)\n        this.setState({ spells: res.data });  \n        console.log(this.state.spells);\n    })\n    axios.get(`http://127.0.0.1:8000/user/getInventory/`+ this.props.id_desc)\n      .then(res => {\n        //   Update self\n        //   And update the group (child component)\n        this.setState({ items: res.data });\n        console.log(this.state.items);\n    })\n  }\n  \n  // update = () => {\n  //   this.set\n  // }\n\n  getItems = () => {\n    var listItems = [];\n    for(let i = 0; i < this.state.items.length; i++) {\n     listItems.push(this.state.items[i]);\n    }\n    return (\n      listItems\n    )\n  };\n  getSpells = () => {\n    var listSpells = [];\n    for(let i = 0; i < this.state.spells.length; i++) {\n     listSpells.push(this.state.spells[i]);\n    }\n    return (\n      listSpells\n    )\n  };\n  \n  showItemForm() {\n    this.setState({\n      showItemForm: !this.state.showItemForm\n    });\n  }\n\n\n    render() {\n      var items = this.getItems();\n      var spells = this.getSpells();\n      return (\n        <div className='description'>\n            <p>{this.props.id_desc}</p>\n            <button onClick={this.showItemForm.bind(this)}>Add item</button>\n            {items.map((item, i) => {\n                    return (\n                        <div className=\"item_box\" key={i}>\n                            <div className=\"card-name\">{item.itemName}</div>\n                            <div className=\"card-race\">{item.itemEffect}</div>\n                            <div className=\"card-spe\">{item.type_object}</div>\n                            <div className=\"card-spe\">{item.nbr}</div>\n                        </div>\n            )})}\n            {spells.map((spell, i) => {\n                    return (\n                        <div className=\"spell_box\" key={i}>\n                            <div className=\"card-name\">{spell.spellName}</div>\n                            <div className=\"card-race\">{spell.spellEffect}</div>\n                        </div>\n            )})}\n            {this.state.showItemForm ? \n              <FormItem id_desc={this.props.id_desc} setState={this.setState}/> : null\n            }\n        </div>\n      );\n    }\n  }\n\nexport default Description;"]},"metadata":{},"sourceType":"module"}