{"ast":null,"code":"var _jsxFileName = \"/var/www/html/test_react/test_react/src/components/statsForm.js\";\nimport React, { Component } from 'react';\nimport FormValidator from '../validation/FormValidator';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass FormStats extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = event => {\n      event.preventDefault();\n      console.log(this.state.health);\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n      const validation = this.validator.validate(this.state); // console.log(this.props.id_desc);\n\n      this.setState({\n        validation\n      });\n      this.submitted = true;\n\n      if (validation.isValid) {\n        console.log(\"Validated Item Form !\");\n        axios.defaults.xsrfCookieName = 'csrftoken';\n        axios.defaults.xsrfHeaderName = 'X-CSRFToken';\n        axios.get(`http://127.0.0.1:8000/user/item_create/`).then(res => {\n          console.log(res);\n          this.setState({\n            updateInventory: !this.state.updateInventory\n          });\n        }).then(res => {\n          this.props.handler();\n        });\n      }\n    };\n\n    this.validator = new FormValidator([{\n      field: 'health',\n      method: 'isEmpty',\n      validWhen: false,\n      message: 'Enter health'\n    }, {\n      field: 'maxHealth',\n      method: 'isEmpty',\n      validWhen: false,\n      message: 'Enter max health'\n    }, {\n      field: 'mana',\n      method: 'isEmpty',\n      validWhen: false,\n      message: 'Enter mana'\n    }, {\n      field: 'maxMana',\n      method: 'isEmpty',\n      validWhen: false,\n      message: 'Enter max mana'\n    }]);\n    this.state = {\n      health: this.props.health,\n      maxHealth: this.props.maxHealth,\n      mana: this.props.mana,\n      maxMana: this.props.maxMana,\n      validation: this.validator.valid()\n    };\n    this.submitted = false;\n  }\n\n  render() {\n    let validation = this.submitted ? this.validator.validate(this.state) : this.state.validation;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container form_stats form\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"registrationForm\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Change stats\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: validation.health.isInvalid ? 'has-error' : null,\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"item_nbr\",\n                    children: \"Health\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    value: this.state.health,\n                    type: \"integer\",\n                    className: \"form-control\",\n                    name: \"item_nbr\",\n                    onChange: this.handleInputChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 25\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"help-block\",\n                    children: validation.health.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 151\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 21\n                }, this), \"/\", /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: validation.health.isInvalid ? 'has-error' : null,\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"item_nbr\",\n                    children: \"Max Health\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    value: this.state.maxHealth,\n                    type: \"integer\",\n                    className: \"form-control\",\n                    name: \"item_nbr\",\n                    onChange: this.handleInputChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 25\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"help-block\",\n                    children: validation.health.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 154\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: validation.health.isInvalid ? 'has-error' : null,\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"item_nbr\",\n                    children: \"Mana\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    value: this.state.mana,\n                    type: \"integer\",\n                    className: \"form-control\",\n                    name: \"item_nbr\",\n                    onChange: this.handleInputChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 25\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"help-block\",\n                    children: validation.health.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 149\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 21\n                }, this), \"/\", /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: validation.health.isInvalid ? 'has-error' : null,\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"item_nbr\",\n                    children: \"Max Mana\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    value: this.state.maxMana,\n                    type: \"integer\",\n                    className: \"form-control\",\n                    name: \"item_nbr\",\n                    onChange: this.handleInputChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 25\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"help-block\",\n                    children: validation.health.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 152\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: this.handleFormSubmit,\n                className: \"btn btn-primary\",\n                children: \" Create item \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 1\n    }, this);\n  }\n\n}\n\nexport default FormStats;","map":{"version":3,"sources":["/var/www/html/test_react/test_react/src/components/statsForm.js"],"names":["React","Component","FormValidator","axios","FormStats","constructor","props","handleInputChange","event","preventDefault","console","log","state","health","setState","target","name","value","handleFormSubmit","validation","validator","validate","submitted","isValid","defaults","xsrfCookieName","xsrfHeaderName","get","then","res","updateInventory","handler","field","method","validWhen","message","maxHealth","mana","maxMana","valid","render","isInvalid"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport FormValidator from '../validation/FormValidator';\nimport axios from 'axios';\n\nclass FormStats extends Component{\nconstructor(props){\nsuper(props);\nthis.validator = new FormValidator([{\n    field: 'health',\n    method: 'isEmpty',\n    validWhen: false,\n    message: 'Enter health'\n}, {\n    field: 'maxHealth',\n    method: 'isEmpty',\n    validWhen: false,\n    message: 'Enter max health'\n}, {\n    field: 'mana',\n    method: 'isEmpty',\n    validWhen: false,\n    message: 'Enter mana'\n}, \n{\n    field: 'maxMana',\n    method: 'isEmpty',\n    validWhen: false,\n    message: 'Enter max mana'\n}\n]);\n\nthis.state = {\nhealth: this.props.health,\nmaxHealth: this.props.maxHealth,\nmana: this.props.mana,\nmaxMana: this.props.maxMana,\nvalidation: this.validator.valid()\n}\nthis.submitted = false;\n}\n\n\n\nhandleInputChange = event => {\nevent.preventDefault();\nconsole.log(this.state.health);\nthis.setState({\n[event.target.name]: event.target.value,\n});\n}\nhandleFormSubmit = event => {\nevent.preventDefault();\nconst validation = this.validator.validate(this.state);\n// console.log(this.props.id_desc);\nthis.setState({\nvalidation\n});\nthis.submitted = true;\nif(validation.isValid) {\n    console.log(\"Validated Item Form !\");\n\n    axios.defaults.xsrfCookieName = 'csrftoken';\n    axios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\n    axios.get(`http://127.0.0.1:8000/user/item_create/`)\n    .then(res => {\n        console.log(res);\n        this.setState({ updateInventory: !this.state.updateInventory });\n    }).then(res => {\n        this.props.handler();\n    })\n}\n}\nrender() {\nlet validation = this.submitted ?this.validator.validate(this.state) : this.state.validation\nreturn (\n<div>\n    <div className=\"container form_stats form\">\n        <div className=\"row\">\n            <div>\n                <form className=\"registrationForm\">\n                <h2>Change stats</h2>\n                <div>\n                    <div className={validation.health.isInvalid ? 'has-error' : null}>\n                        <label htmlFor=\"item_nbr\">Health</label>\n                        <input value={this.state.health} type=\"integer\" className=\"form-control\" name=\"item_nbr\" onChange={this.handleInputChange} /> <span className=\"help-block\">{validation.health.message}</span> \n                    </div>\n                    /\n                    <div className={validation.health.isInvalid ? 'has-error' : null}>\n                        <label htmlFor=\"item_nbr\">Max Health</label>\n                        <input value={this.state.maxHealth} type=\"integer\" className=\"form-control\" name=\"item_nbr\" onChange={this.handleInputChange} /> <span className=\"help-block\">{validation.health.message}</span> \n                    </div>\n                </div>\n                <div>\n                    <div className={validation.health.isInvalid ? 'has-error' : null}>\n                        <label htmlFor=\"item_nbr\">Mana</label>\n                        <input value={this.state.mana} type=\"integer\" className=\"form-control\" name=\"item_nbr\" onChange={this.handleInputChange} /> <span className=\"help-block\">{validation.health.message}</span> \n                    </div>\n                    /\n                    <div className={validation.health.isInvalid ? 'has-error' : null}>\n                        <label htmlFor=\"item_nbr\">Max Mana</label>\n                        <input value={this.state.maxMana} type=\"integer\" className=\"form-control\" name=\"item_nbr\" onChange={this.handleInputChange} /> <span className=\"help-block\">{validation.health.message}</span> \n                    </div>\n                </div>\n                    \n                    \n                <button onClick={this.handleFormSubmit} className=\"btn btn-primary\"> Create item </button>\n                </form>\n            </div>\n        </div>\n    </div>\n\n</div>\n)\n}\n}\nexport default FormStats;"]},"metadata":{},"sourceType":"module"}