{"ast":null,"code":"var _jsxFileName = \"/var/www/html/test_react/test_react/src/components/description.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport FormItem from './itemForm';\nimport FormSpell from './spellForm';\nimport FormStats from './statsForm';\nimport FormCaract from './caractForm';\nimport $ from 'jquery';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Description extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getItems = () => {\n      var listItems = [];\n\n      for (let i = 0; i < this.state.items.length; i++) {\n        listItems.push(this.state.items[i]);\n      }\n\n      return listItems;\n    };\n\n    this.getSpells = () => {\n      var listSpells = [];\n\n      for (let i = 0; i < this.state.spells.length; i++) {\n        listSpells.push(this.state.spells[i]);\n      }\n\n      return listSpells;\n    };\n\n    this.displayInventory = () => {\n      this.setState({\n        displayInventory: !this.state.displayInventory,\n        displaySpells: !this.state.displaySpells\n      });\n    };\n\n    this.displaySpells = () => {\n      this.setState({\n        displayInventory: !this.state.displayInventory,\n        displaySpells: !this.state.displaySpells\n      });\n    };\n\n    this.handler = this.handler.bind(this);\n    this.handlerStats = this.handlerStats.bind(this);\n    this.state = {\n      spells: [],\n      items: [],\n      currentUser: [],\n      update: false,\n      displayInventory: true,\n      displaySpells: false\n    };\n  } // Get the change from statsForm, then update and call the parent GroupActif.\n\n\n  handlerStats() {\n    this.props.handlerGroup();\n    $(\".form\").removeClass(\"displayed\");\n  }\n\n  handler() {\n    this.setState({\n      update: !this.state.update\n    });\n  }\n\n  fetchData() {\n    axios.defaults.xsrfCookieName = 'csrftoken';\n    axios.defaults.xsrfHeaderName = 'X-CSRFToken';\n    axios.get(`http://127.0.0.1:8000/user/getSpells/` + this.props.id_desc).then(res => {\n      //   Update self\n      //   And update the group (child component)\n      this.setState({\n        spells: res.data\n      }); // console.log(this.state.spells);      \n    });\n    axios.get(`http://127.0.0.1:8000/user/getInventory/` + this.props.id_desc).then(res => {\n      //   Update self\n      //   And update the group (child component)\n      this.setState({\n        items: res.data\n      }); // console.log(this.state.items);         \n    });\n  }\n\n  getCurrentUser() {\n    this.props.users.forEach(element => {\n      if (element['id_player'] == this.props.id_desc) {\n        let currentUser = Object.entries(element);\n        let array = [];\n\n        for (let i = 0; i < currentUser.length; i++) {\n          if (currentUser[i][0] == \"health\" || currentUser[i][0] == \"mana\" || currentUser[i][0] == \"maxHealth\" || currentUser[i][0] == \"maxMana\" || currentUser[i][0] == \"Physique\" || currentUser[i][0] == \"Mental\" || currentUser[i][0] == \"Social\") {\n            array[currentUser[i][0]] = currentUser[i][1];\n          }\n        }\n\n        this.setState({\n          currentUser: array\n        }, function () {// console.log(this.state.currentUser['Mental']);\n        });\n      }\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    // Update the component if parent state is updated\n    if (this.props.id_desc !== prevProps.id_desc || this.state.update !== prevState.update) {\n      this.fetchData();\n      this.getCurrentUser();\n    }\n  }\n\n  componentDidMount() {\n    this.fetchData();\n    this.getScripts();\n    this.getCurrentUser();\n  }\n\n  getScripts() {\n    var button_form_item = document.getElementsByClassName('btn_form_item');\n    var button_form_spell = document.getElementsByClassName('btn_form_spell');\n    var form_item = document.getElementsByClassName('form_item');\n    var form_spell = document.getElementsByClassName('form_spell');\n    var form_stats = document.getElementsByClassName('form_stats');\n    var form_caract = document.getElementsByClassName('form_caract');\n    var card_group = document.getElementsByClassName('char_card');\n    var forms = document.getElementsByClassName('form');\n    var button_form_stats = document.getElementsByClassName('btn_form_stats');\n    var button_form_caract = document.getElementsByClassName('btn_form_caract');\n    var button_inventory_spell = document.getElementsByClassName('btn_inventory_spell');\n    $(button_inventory_spell).on('click', function () {\n      // $(button_inventory_spell).addClass('used');\n      console.log($(this));\n\n      if ($(this).hasClass('used')) {\n        return;\n      } else {\n        $(button_inventory_spell).removeClass('used');\n        $(this).addClass('used');\n        $(\".content_inventory\").addClass('displayed');\n      }\n    });\n    $(button_form_item).on('click', function () {\n      if ($(form_item).hasClass(\"displayed\")) {\n        $(form_item).removeClass(\"displayed\");\n      } else {\n        $(forms).removeClass(\"displayed\");\n        $(form_item).addClass(\"displayed\");\n      }\n    });\n    $(button_form_caract).on('click', function () {\n      if ($(form_caract).hasClass(\"displayed\")) {\n        $(form_caract).removeClass(\"displayed\");\n      } else {\n        $(forms).removeClass(\"displayed\");\n        $(form_caract).addClass(\"displayed\");\n      }\n    });\n    $(button_form_stats).on('click', function () {\n      if ($(form_stats).hasClass(\"displayed\")) {\n        $(form_stats).removeClass(\"displayed\");\n      } else {\n        $(forms).removeClass(\"displayed\");\n        $(form_stats).addClass(\"displayed\");\n      }\n    });\n    $(card_group).on('click', function () {\n      $(forms).removeClass(\"displayed\");\n    });\n    $(button_form_spell).on('click', function () {\n      if ($(form_spell).hasClass(\"displayed\")) {\n        $(form_spell).removeClass(\"displayed\");\n      } else {\n        $(forms).removeClass(\"displayed\");\n        $(form_spell).addClass(\"displayed\");\n      }\n    });\n  }\n\n  render() {\n    var items = this.getItems();\n    var spells = this.getSpells();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"description\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box_btn\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn_form_desc btn_form_stats\",\n          children: \"Change stats\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn_form_desc btn_form_caract\",\n          children: \"Change caract\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn_form_desc btn_form_item\",\n          children: \"Add item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn_form_desc btn_form_spell\",\n          children: \"Add spell\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box_btn_inventory_spells\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn_inventory_spell btn_box_inventory used\",\n          onClick: this.displayInventory.bind(this.displayInventory),\n          children: \"Inventory\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn_inventory_spell btn_box_spells\",\n          onClick: this.displaySpells.bind(this.displaySpells),\n          children: \"Spells\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this), this.state.displayInventory ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item_content\",\n        children: items.map((item, i) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item_box\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"item-name\",\n              children: item.itemName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"item-race\",\n              children: item.itemEffect\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"item-spe\",\n              children: item.type_object\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"item-nbr\",\n              children: item.nbr\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 29\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 13\n      }, this) : null, this.state.displaySpells ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spell_content\",\n        children: spells.map((spell, i) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"spell_box\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-name\",\n              children: spell.spellName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-race\",\n              children: spell.spellEffect\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 29\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 13\n      }, this) : null, /*#__PURE__*/_jsxDEV(FormItem, {\n        id_desc: this.props.id_desc,\n        handler: this.handler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(FormSpell, {\n        id_desc: this.props.id_desc,\n        handler: this.handler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(FormStats, {\n        id_desc: this.props.id_desc,\n        handlerStats: this.handlerStats,\n        health: this.state.currentUser['health'],\n        maxHealth: this.state.currentUser['maxHealth'],\n        mana: this.state.currentUser['mana'],\n        maxMana: this.state.currentUser['maxMana']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(FormCaract, {\n        id_desc: this.props.id_desc,\n        handlerStats: this.handlerStats,\n        physic: this.state.currentUser['Physique'],\n        mental: this.state.currentUser['Mental'],\n        social: this.state.currentUser['Social']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Description;","map":{"version":3,"sources":["/var/www/html/test_react/test_react/src/components/description.js"],"names":["React","axios","FormItem","FormSpell","FormStats","FormCaract","$","Description","Component","constructor","props","getItems","listItems","i","state","items","length","push","getSpells","listSpells","spells","displayInventory","setState","displaySpells","handler","bind","handlerStats","currentUser","update","handlerGroup","removeClass","fetchData","defaults","xsrfCookieName","xsrfHeaderName","get","id_desc","then","res","data","getCurrentUser","users","forEach","element","Object","entries","array","componentDidUpdate","prevProps","prevState","snapshot","componentDidMount","getScripts","button_form_item","document","getElementsByClassName","button_form_spell","form_item","form_spell","form_stats","form_caract","card_group","forms","button_form_stats","button_form_caract","button_inventory_spell","on","console","log","hasClass","addClass","render","map","item","itemName","itemEffect","type_object","nbr","spell","spellName","spellEffect"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport FormItem from './itemForm';\nimport FormSpell from './spellForm';\nimport FormStats from './statsForm';\nimport FormCaract from './caractForm';\nimport $ from 'jquery';\n\nclass Description extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handler = this.handler.bind(this);\n    this.handlerStats = this.handlerStats.bind(this);\n    this.state = {\n      spells: [],\n      items: [],\n      currentUser: [],\n      update: false,\n      displayInventory: true,\n      displaySpells: false\n    };\n  }\n\n// Get the change from statsForm, then update and call the parent GroupActif.\n  handlerStats() {\n    this.props.handlerGroup();\n    $(\".form\").removeClass(\"displayed\");\n  }\n\n  handler() {\n    this.setState({\n      update: !this.state.update\n    })\n  }\n  \n  fetchData() {\n    axios.defaults.xsrfCookieName = 'csrftoken';\n    axios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\n    axios.get(`http://127.0.0.1:8000/user/getSpells/`+ this.props.id_desc)\n    .then(res => {\n      //   Update self\n      //   And update the group (child component)\n      this.setState({ spells: res.data });  \n      // console.log(this.state.spells);      \n    })\n    axios.get(`http://127.0.0.1:8000/user/getInventory/`+ this.props.id_desc)\n      .then(res => {\n        //   Update self\n        //   And update the group (child component)\n        this.setState({ items: res.data });\n        // console.log(this.state.items);         \n    })\n  }\n\n  getCurrentUser() {\n    this.props.users.forEach(element => {\n        if(element['id_player'] == this.props.id_desc) {\n          let currentUser = Object.entries(element);\n          let array = [];\n          for(let i = 0; i < currentUser.length; i++) {\n            if(currentUser[i][0] == \"health\" || currentUser[i][0] == \"mana\"\n            || currentUser[i][0] == \"maxHealth\" || currentUser[i][0] == \"maxMana\"\n            || currentUser[i][0] == \"Physique\" || currentUser[i][0] == \"Mental\"\n            || currentUser[i][0] == \"Social\") {\n              array[currentUser[i][0]] = currentUser[i][1];\n            }\n          }\n          this.setState({ currentUser: array }, function() {\n            // console.log(this.state.currentUser['Mental']);\n          });\n        }\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    // Update the component if parent state is updated\n    if(this.props.id_desc !== prevProps.id_desc || this.state.update !== prevState.update) {\n      this.fetchData();\n      this.getCurrentUser();\n    }\n}\n\n  componentDidMount() {\n    this.fetchData();\n    this.getScripts();\n    this.getCurrentUser();\n  }\n\n  getScripts() {\n    var button_form_item = document.getElementsByClassName('btn_form_item');\n    var button_form_spell = document.getElementsByClassName('btn_form_spell');\n    var form_item = document.getElementsByClassName('form_item');\n    var form_spell = document.getElementsByClassName('form_spell');\n    var form_stats = document.getElementsByClassName('form_stats');\n    var form_caract = document.getElementsByClassName('form_caract');\n    var card_group = document.getElementsByClassName('char_card');\n    var forms = document.getElementsByClassName('form');\n    var button_form_stats = document.getElementsByClassName('btn_form_stats');\n    var button_form_caract = document.getElementsByClassName('btn_form_caract');\n    var button_inventory_spell = document.getElementsByClassName('btn_inventory_spell');\n\n\n    $(button_inventory_spell).on('click', function(){\n      // $(button_inventory_spell).addClass('used');\n      console.log($(this));\n      if($(this).hasClass('used')) {\n        return;\n      }else {\n        $(button_inventory_spell).removeClass('used');\n        $(this).addClass('used');\n        $(\".content_inventory\").addClass('displayed');\n      }\n    })\n\n\n    $(button_form_item).on('click', function() {\n        if($(form_item).hasClass(\"displayed\")) {\n            $(form_item).removeClass(\"displayed\");\n        }else {\n            $(forms).removeClass(\"displayed\");\n            $(form_item).addClass(\"displayed\");\n        }\n    })\n\n    $(button_form_caract).on('click', function() {\n      if($(form_caract).hasClass(\"displayed\")) {\n          $(form_caract).removeClass(\"displayed\");\n      }else {\n          $(forms).removeClass(\"displayed\");\n          $(form_caract).addClass(\"displayed\");\n      }\n    })\n\n    $(button_form_stats).on('click', function() {\n      if($(form_stats).hasClass(\"displayed\")) {\n          $(form_stats).removeClass(\"displayed\");\n      }else {\n          $(forms).removeClass(\"displayed\");\n          $(form_stats).addClass(\"displayed\");\n      }\n    })\n\n  $(card_group).on('click', function() {\n    $(forms).removeClass(\"displayed\");\n  })\n\n  $(button_form_spell).on('click', function() {\n    if($(form_spell).hasClass(\"displayed\")) {\n        $(form_spell).removeClass(\"displayed\");\n    }else {\n      $(forms).removeClass(\"displayed\");\n        $(form_spell).addClass(\"displayed\");\n    }\n  })\n}\n  \n   \n\n  getItems = () => {\n    var listItems = [];\n    for(let i = 0; i < this.state.items.length; i++) {\n     listItems.push(this.state.items[i]);\n    }\n    return (\n      listItems\n    )\n  };\n  getSpells = () => {\n    var listSpells = [];\n    for(let i = 0; i < this.state.spells.length; i++) {\n     listSpells.push(this.state.spells[i]);\n    }\n    return (\n      listSpells\n    )\n  };\n  \n  displayInventory = () => {\n    this.setState({\n      displayInventory: !this.state.displayInventory,\n      displaySpells: !this.state.displaySpells\n    })\n  }\n  \n  displaySpells = () => {\n    this.setState({\n      displayInventory: !this.state.displayInventory,\n      displaySpells: !this.state.displaySpells\n    })\n  }\n  \n    \n\n\n\n\n    render() {\n      var items = this.getItems();\n      var spells = this.getSpells();\n      return (\n        <div className='description'>\n          <div className=\"box_btn\">\n            <button className=\"btn_form_desc btn_form_stats\">Change stats</button>\n            <button className=\"btn_form_desc btn_form_caract\">Change caract</button>\n            <button className=\"btn_form_desc btn_form_item\">Add item</button>\n            <button className=\"btn_form_desc btn_form_spell\">Add spell</button>\n          </div>\n          <div className=\"box_btn_inventory_spells\">\n            <button className=\"btn_inventory_spell btn_box_inventory used\" onClick={this.displayInventory.bind(this.displayInventory)}>Inventory</button>\n            <button className=\"btn_inventory_spell btn_box_spells\" onClick={this.displaySpells.bind(this.displaySpells)}>Spells</button>\n          </div>\n          {this.state.displayInventory ? \n            <div className=\"item_content\">\n            {items.map((item, i) => {\n                    return (\n                        <div className=\"item_box\" key={i}>\n                            <div className=\"item-name\">{item.itemName}</div>\n                            <div className=\"item-race\">{item.itemEffect}</div>\n                            <div className=\"item-spe\">{item.type_object}</div>\n                            <div className=\"item-nbr\">{item.nbr}</div>\n                        </div>\n              )})}\n            </div>\n            : null\n          }\n          {this.state.displaySpells ? \n            <div className=\"spell_content\">\n            {spells.map((spell, i) => {\n                    return (\n                        <div className=\"spell_box\" key={i}>\n                            <div className=\"card-name\">{spell.spellName}</div>\n                            <div className=\"card-race\">{spell.spellEffect}</div>\n                        </div>\n              )})}\n            </div>\n            : null\n          }\n            {/* <div className=\"item_content\">\n              {items.map((item, i) => {\n                      return (\n                          <div className=\"item_box\" key={i}>\n                              <div className=\"item-name\">{item.itemName}</div>\n                              <div className=\"item-race\">{item.itemEffect}</div>\n                              <div className=\"item-spe\">{item.type_object}</div>\n                              <div className=\"item-nbr\">{item.nbr}</div>\n                          </div>\n              )})}\n            </div> */}\n            {/* <div className=\"spell_content\">\n              {spells.map((spell, i) => {\n                      return (\n                          <div className=\"spell_box\" key={i}>\n                              <div className=\"card-name\">{spell.spellName}</div>\n                              <div className=\"card-race\">{spell.spellEffect}</div>\n                          </div>\n              )})}\n            </div> */}\n              <FormItem id_desc={this.props.id_desc} handler={this.handler}/>\n              <FormSpell id_desc={this.props.id_desc} handler={this.handler}/>\n              <FormStats \n              id_desc={this.props.id_desc} \n              handlerStats={this.handlerStats}\n              health={this.state.currentUser['health']}\n              maxHealth={this.state.currentUser['maxHealth']}\n              mana={this.state.currentUser['mana']}\n              maxMana={this.state.currentUser['maxMana']}\n              />\n              <FormCaract\n              id_desc={this.props.id_desc} \n              handlerStats={this.handlerStats}\n              physic={this.state.currentUser['Physique']}\n              mental={this.state.currentUser['Mental']}\n              social={this.state.currentUser['Social']}\n              />\n        </div>\n      );\n    }\n  }\n\nexport default Description;"]},"metadata":{},"sourceType":"module"}