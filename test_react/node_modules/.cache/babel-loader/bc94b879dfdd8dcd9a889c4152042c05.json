{"ast":null,"code":"var _jsxFileName = \"/var/www/html/JOR/test_react/src/components/statsForm.js\";\nimport React, { Component } from 'react';\nimport FormValidator from '../validation/FormValidator';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass FormStats extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = event => {\n      event.preventDefault(); // console.log(this.props.health);\n\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault(); // console.log(this.props.mana);\n\n      const validation = this.validator.validate(this.state); // console.log(this.props.id_desc);\n\n      this.setState({\n        validation\n      });\n      this.submitted = true;\n\n      if (validation.isValid) {\n        // console.log(\"Validated Stats Form !\");\n        axios.defaults.xsrfCookieName = 'csrftoken';\n        axios.defaults.xsrfHeaderName = 'X-CSRFToken';\n        axios.post(`http://127.0.0.1:8000/api/user/update_stats/` + this.state.health + \"/\" + this.state.maxHealth + \"/\" + this.state.mana + \"/\" + this.state.maxMana + \"/\" + this.props.id_desc + \"/\" + this.props.id_party).then(res => {// console.log(res);\n        }).then(res => {\n          this.props.handlerStats(); // Update the parent Description until Group is update \n        });\n      }\n    };\n\n    this.validator = new FormValidator([{\n      field: 'health',\n      method: 'isEmpty',\n      validWhen: false,\n      message: 'Enter health'\n    }, {\n      field: 'maxHealth',\n      method: 'isEmpty',\n      validWhen: false,\n      message: 'Enter max health'\n    }, {\n      field: 'mana',\n      method: 'isEmpty',\n      validWhen: false,\n      message: 'Enter mana'\n    }, {\n      field: 'maxMana',\n      method: 'isEmpty',\n      validWhen: false,\n      message: 'Enter max mana'\n    }]);\n    this.state = {\n      health: this.props.health,\n      maxHealth: this.props.maxHealth,\n      mana: this.props.mana,\n      maxMana: this.props.maxMana,\n      validation: this.validator.valid()\n    };\n    this.submitted = false;\n  }\n\n  componentWillReceiveProps(props) {\n    this.setState({\n      health: this.props.health,\n      maxHealth: this.props.maxHealth,\n      mana: this.props.mana,\n      maxMana: this.props.maxMana\n    });\n  }\n\n  render() {\n    let validation = this.submitted ? this.validator.validate(this.state) : this.state.validation;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container form_stats form\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"registrationForm\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Change stats\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"content_stats\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: validation.health.isInvalid ? 'has-error' : null,\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"health\",\n                    children: \"Health\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    defaultValue: this.props.health,\n                    type: \"integer\",\n                    className: \"form-control\",\n                    name: \"health\",\n                    onChange: this.handleInputChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 104,\n                    columnNumber: 25\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"help-block\",\n                    children: validation.health.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 104,\n                    columnNumber: 156\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 21\n                }, this), \"/\", /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: validation.maxHealth.isInvalid ? 'has-error' : null,\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"maxHealth\",\n                    children: \"Max Health\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    defaultValue: this.props.maxHealth,\n                    type: \"integer\",\n                    className: \"form-control\",\n                    name: \"maxHealth\",\n                    onChange: this.handleInputChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 25\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"help-block\",\n                    children: validation.maxHealth.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 162\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"content_stats\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: validation.mana.isInvalid ? 'has-error' : null,\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"mana\",\n                    children: \"Mana\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    defaultValue: this.props.mana,\n                    type: \"integer\",\n                    className: \"form-control\",\n                    name: \"mana\",\n                    onChange: this.handleInputChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 25\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"help-block\",\n                    children: validation.mana.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 152\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 21\n                }, this), \"/\", /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: validation.maxMana.isInvalid ? 'has-error' : null,\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"maxMana\",\n                    children: \"Max Mana\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    defaultValue: this.props.maxMana,\n                    type: \"integer\",\n                    className: \"form-control\",\n                    name: \"maxMana\",\n                    onChange: this.handleInputChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 25\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"help-block\",\n                    children: validation.maxMana.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 158\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: this.handleFormSubmit,\n                className: \"btn btn-primary\",\n                children: \" Create item \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 1\n    }, this);\n  }\n\n}\n\nexport default FormStats;","map":{"version":3,"sources":["/var/www/html/JOR/test_react/src/components/statsForm.js"],"names":["React","Component","FormValidator","axios","FormStats","constructor","props","handleInputChange","event","preventDefault","setState","target","name","value","handleFormSubmit","validation","validator","validate","state","submitted","isValid","defaults","xsrfCookieName","xsrfHeaderName","post","health","maxHealth","mana","maxMana","id_desc","id_party","then","res","handlerStats","field","method","validWhen","message","valid","componentWillReceiveProps","render","isInvalid"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport FormValidator from '../validation/FormValidator';\nimport axios from 'axios';\n\n\nclass FormStats extends Component{\nconstructor(props){\nsuper(props);\nthis.validator = new FormValidator([{\n    field: 'health',\n    method: 'isEmpty',\n    validWhen: false,\n    message: 'Enter health'\n}, {\n    field: 'maxHealth',\n    method: 'isEmpty',\n    validWhen: false,\n    message: 'Enter max health'\n}, {\n    field: 'mana',\n    method: 'isEmpty',\n    validWhen: false,\n    message: 'Enter mana'\n}, \n{\n    field: 'maxMana',\n    method: 'isEmpty',\n    validWhen: false,\n    message: 'Enter max mana'\n}\n]);\n\nthis.state = {\nhealth: this.props.health,\nmaxHealth: this.props.maxHealth,\nmana: this.props.mana,\nmaxMana: this.props.maxMana,\nvalidation: this.validator.valid()\n}\nthis.submitted = false;\n}\n\ncomponentWillReceiveProps(props) {\n    this.setState({\n        health: this.props.health,\n        maxHealth: this.props.maxHealth,\n        mana: this.props.mana,\n        maxMana: this.props.maxMana\n    });\n}\n\n\n\nhandleInputChange = event => {\nevent.preventDefault();\n// console.log(this.props.health);\nthis.setState({\n[event.target.name]: event.target.value,\n});\n}\nhandleFormSubmit = event => {\nevent.preventDefault();\n// console.log(this.props.mana);\n\nconst validation = this.validator.validate(this.state);\n// console.log(this.props.id_desc);\nthis.setState({\nvalidation\n});\nthis.submitted = true;\nif(validation.isValid) {\n    // console.log(\"Validated Stats Form !\");\n\n    axios.defaults.xsrfCookieName = 'csrftoken';\n    axios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\n    axios.post(`http://127.0.0.1:8000/api/user/update_stats/` \n    + this.state.health + \"/\" \n    + this.state.maxHealth + \"/\" \n    + this.state.mana + \"/\"\n    + this.state.maxMana + \"/\"\n    + this.props.id_desc\n    + \"/\" + this.props.id_party)\n    .then(res => {\n        // console.log(res);\n    }).then(res => {\n        this.props.handlerStats();\n        // Update the parent Description until Group is update \n    })\n}\n}\nrender() {\nlet validation = this.submitted ?this.validator.validate(this.state) : this.state.validation\nreturn (\n<div>\n    <div className=\"container form_stats form\">\n        <div className=\"row\">\n            <div>\n                <form className=\"registrationForm\">\n                <h2>Change stats</h2>\n                <div className=\"content_stats\">\n                    <div className={validation.health.isInvalid ? 'has-error' : null}>\n                        <label htmlFor=\"health\">Health</label>\n                        <input defaultValue={this.props.health} type=\"integer\" className=\"form-control\" name=\"health\" onChange={this.handleInputChange} /> <span className=\"help-block\">{validation.health.message}</span> \n                    </div>\n                    /\n                    <div className={validation.maxHealth.isInvalid ? 'has-error' : null}>\n                        <label htmlFor=\"maxHealth\">Max Health</label>\n                        <input defaultValue={this.props.maxHealth} type=\"integer\" className=\"form-control\" name=\"maxHealth\" onChange={this.handleInputChange} /> <span className=\"help-block\">{validation.maxHealth.message}</span> \n                    </div>\n                </div>\n                <div className=\"content_stats\">\n                    <div className={validation.mana.isInvalid ? 'has-error' : null}>\n                        <label htmlFor=\"mana\">Mana</label>\n                        <input defaultValue={this.props.mana} type=\"integer\" className=\"form-control\" name=\"mana\" onChange={this.handleInputChange} /> <span className=\"help-block\">{validation.mana.message}</span> \n                    </div>\n                    /\n                    <div className={validation.maxMana.isInvalid ? 'has-error' : null}>\n                        <label htmlFor=\"maxMana\">Max Mana</label>\n                        <input defaultValue={this.props.maxMana} type=\"integer\" className=\"form-control\" name=\"maxMana\" onChange={this.handleInputChange} /> <span className=\"help-block\">{validation.maxMana.message}</span> \n                    </div>\n                </div>\n                    \n                    \n                <button onClick={this.handleFormSubmit} className=\"btn btn-primary\"> Create item </button>\n                </form>\n            </div>\n        </div>\n    </div>\n\n</div>\n)\n}\n}\nexport default FormStats;"]},"metadata":{},"sourceType":"module"}