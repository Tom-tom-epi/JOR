{"ast":null,"code":"var _jsxFileName = \"/var/www/html/JOR/test_react/src/components/LoginForm.js\";\nimport React, { Component } from 'react';\nimport FormValidator from '../validation/FormValidator';\nimport axios from 'axios';\nimport $ from 'jquery';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LoginForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getSripts = () => {\n      $(function () {\n        console.log($('.switch_form'));\n        $(\".switch_form\").on('click', function () {\n          // alert('click');\n          if ($(\".form_login\").hasClass('displayed')) {\n            alert('login');\n            $(\".form_login\").removeClass('displayed');\n            $(\".form_register\").addClass('displayed');\n          } else {\n            alert('register');\n            $(\".form_register\").removeClass('displayed');\n            $(\".form_login\").addClass('displayed');\n          }\n        });\n      });\n    };\n\n    this.handleInputChange = event => {\n      event.preventDefault();\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.passwordMatch = (confirmation, state) => state.password === confirmation;\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n      const validation = this.validator.validate(this.state); // console.log(this.props.id_desc);\n\n      this.setState({\n        validation\n      });\n      this.submitted = true;\n\n      if (validation.isValid) {\n        // console.log(\"Login form valid\");\n        axios.defaults.xsrfCookieName = 'csrftoken';\n        axios.defaults.xsrfHeaderName = 'X-CSRFToken';\n        axios.get(`http://127.0.0.1:8000/user_login/` + this.state.email + \"/\" + this.state.password).then(res => {\n          // console.log(res);\n          this.props.getLogged(res.data.username, res.data.email, res.data.id);\n        }).then(res => {// console.log(\"Done !\");\n        });\n      } else {// console.log(\"Form login failled\");\n      }\n    };\n\n    this.validator = new FormValidator([{\n      field: 'email',\n      method: 'isEmpty',\n      validWhen: false,\n      message: 'Enter your email.'\n    }, {\n      field: 'password',\n      method: 'isEmpty',\n      validWhen: false,\n      message: 'Enter password.'\n    }]);\n    this.state = {\n      email: '',\n      password: '',\n      validation: this.validator.valid()\n    };\n    this.submitted = false;\n  }\n\n  render() {\n    let validation = this.submitted ? this.validator.validate(this.state) : this.state.validation;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container form_login form displayed\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"registrationForm\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: validation.email.isInvalid ? 'has-error' : null,\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"email\",\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"string\",\n                  className: \"form-control\",\n                  name: \"email\",\n                  placeholder: \"Email\",\n                  onChange: this.handleInputChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 25\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"help-block\",\n                  children: validation.email.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 141\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: validation.password.isInvalid ? 'has-error' : null,\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"password\",\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  className: \"form-control\",\n                  placeholder: \"Password\",\n                  name: \"password\",\n                  onChange: this.handleInputChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 25\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"help-block\",\n                  children: validation.password.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 149\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: this.handleFormSubmit,\n                className: \"btn btn-primary\",\n                children: \" Submit \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"switch_form\",\n              children: [\"New ? \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 50\n              }, this), \" Sign in\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 1\n    }, this);\n  }\n\n}\n\nexport default LoginForm;","map":{"version":3,"sources":["/var/www/html/JOR/test_react/src/components/LoginForm.js"],"names":["React","Component","FormValidator","axios","$","LoginForm","constructor","props","getSripts","console","log","on","hasClass","alert","removeClass","addClass","handleInputChange","event","preventDefault","setState","target","name","value","passwordMatch","confirmation","state","password","handleFormSubmit","validation","validator","validate","submitted","isValid","defaults","xsrfCookieName","xsrfHeaderName","get","email","then","res","getLogged","data","username","id","field","method","validWhen","message","valid","render","isInvalid"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport FormValidator from '../validation/FormValidator';\nimport axios from 'axios';\nimport $ from 'jquery';\n\nclass LoginForm extends Component{\nconstructor(props){\nsuper(props);\nthis.validator = new FormValidator([\n{\n    field: 'email',\n    method: 'isEmpty',\n    validWhen: false,\n    message: 'Enter your email.'\n}, {\n    field: 'password',\n    method: 'isEmpty',\n    validWhen: false,\n    message: 'Enter password.'\n}\n]);\n\nthis.state = {\nemail: '',\npassword: '',\nvalidation: this.validator.valid()\n}\nthis.submitted = false;\n}\n\ngetSripts = () => {\n    $(function() {\n      console.log($('.switch_form'));\n      $(\".switch_form\").on('click', function () {\n        // alert('click');\n        if($(\".form_login\").hasClass('displayed')) {\n          alert('login');\n          $(\".form_login\").removeClass('displayed');\n          $(\".form_register\").addClass('displayed');\n        } else {\n          alert('register');\n          $(\".form_register\").removeClass('displayed');\n          $(\".form_login\").addClass('displayed');\n        }\n      })\n    })\n}\n\n\nhandleInputChange = event => {\nevent.preventDefault();\nthis.setState({\n[event.target.name]: event.target.value,\n});\n}\npasswordMatch = (confirmation, state) => (state.password === confirmation);\nhandleFormSubmit = event => {\nevent.preventDefault();\nconst validation = this.validator.validate(this.state);\n// console.log(this.props.id_desc);\nthis.setState({\nvalidation\n});\nthis.submitted = true;\nif(validation.isValid) {\n    // console.log(\"Login form valid\");\n\n    axios.defaults.xsrfCookieName = 'csrftoken';\n    axios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\n    axios.get(`http://127.0.0.1:8000/user_login/`+ this.state.email + \"/\" + this.state.password)\n    .then(res => {\n        // console.log(res);\n        this.props.getLogged(res.data.username, res.data.email, res.data.id);\n    }).then(res => {\n        // console.log(\"Done !\");\n    })\n}else {\n    // console.log(\"Form login failled\");\n}\n}\nrender() {\nlet validation = this.submitted ?this.validator.validate(this.state) : this.state.validation\nreturn ( \n<div>\n    <div className=\"container form_login form displayed\">\n        <div className=\"row\">\n            <div>\n                <form className=\"registrationForm\">\n                <h2>Login</h2>\n                    \n                    <div className={validation.email.isInvalid ? 'has-error' : null}>\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"string\" className=\"form-control\" name=\"email\" placeholder=\"Email\" onChange={this.handleInputChange} /> <span className=\"help-block\">{validation.email.message}</span> \n                    </div>\n                    <div className={validation.password.isInvalid ? 'has-error' : null}>\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" className=\"form-control\" placeholder=\"Password\" name=\"password\" onChange={this.handleInputChange} /> <span className=\"help-block\">{validation.password.message}</span> \n                    </div>\n\n                <button onClick={this.handleFormSubmit} className=\"btn btn-primary\"> Submit </button>\n                </form>\n                <p className=\"switch_form\">New ? <br/> Sign in</p>\n            </div>\n        </div>\n    </div>\n\n</div>\n)\n}\n}\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}