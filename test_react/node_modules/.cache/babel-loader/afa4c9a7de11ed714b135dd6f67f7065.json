{"ast":null,"code":"var _jsxFileName = \"/var/www/html/JOR/test_react/src/components/RegisterForm.js\";\nimport React, { Component } from 'react';\nimport FormValidator from '../validation/FormValidator';\nimport axios from 'axios';\nimport $ from 'jquery';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass RegisterForm extends Component {\n  constructor() {\n    super();\n\n    this.handleInputChange = event => {\n      event.preventDefault();\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.passwordMatch = (confirmation, state) => state.password === confirmation;\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n      const validation = this.validator.validate(this.state); // console.log(this.props.id_desc);\n\n      this.setState({\n        validation\n      });\n      this.submitted = true;\n\n      if (validation.isValid) {\n        console.log(\"Registration form valid\");\n        axios.defaults.xsrfCookieName = 'csrftoken';\n        axios.defaults.xsrfHeaderName = 'X-CSRFToken';\n        axios.post(`http://127.0.0.1:8000/api/user_register/` + this.state.username + \"/\" + this.state.email + \"/\" + this.state.password).then(res => {\n          console.log(res);\n        }).then(res => {\n          console.log(\"Done !\");\n        });\n      } else {\n        console.log(\"Form register failled\");\n      }\n    };\n\n    this.validator = new FormValidator([{\n      field: 'username',\n      method: 'isEmpty',\n      validWhen: false,\n      message: 'Enter username.'\n    }, {\n      field: 'email',\n      method: 'isEmpty',\n      validWhen: false,\n      message: 'Enter your email.'\n    }, {\n      field: 'password',\n      method: 'isEmpty',\n      validWhen: false,\n      message: 'Enter password.'\n    }, {\n      field: 'password_confirmation',\n      method: this.passwordMatch,\n      validWhen: true,\n      message: 'Enter password confirmation.'\n    }]);\n    this.state = {\n      username: '',\n      email: '',\n      password: '',\n      password_confirmation: '',\n      validation: this.validator.valid()\n    };\n    this.submitted = false;\n  }\n\n  render() {\n    let validation = this.submitted ? this.validator.validate(this.state) : this.state.validation;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container form_register form\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"registrationForm\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Register\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: validation.username.isInvalid ? 'has-error' : null,\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"username\",\n                  children: \"Username\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"string\",\n                  className: \"form-control\",\n                  name: \"username\",\n                  placeholder: \"Username\",\n                  onChange: this.handleInputChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 25\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"help-block\",\n                  children: validation.username.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 147\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: validation.email.isInvalid ? 'has-error' : null,\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"email\",\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"string\",\n                  className: \"form-control\",\n                  name: \"email\",\n                  placeholder: \"Email\",\n                  onChange: this.handleInputChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 25\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"help-block\",\n                  children: validation.email.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 141\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: validation.password.isInvalid ? 'has-error' : null,\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"password\",\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  className: \"form-control\",\n                  placeholder: \"Password\",\n                  name: \"password\",\n                  onChange: this.handleInputChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 25\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"help-block\",\n                  children: validation.password.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 149\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: validation.password_confirmation.isInvalid ? 'has-error' : null,\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"password_confirmation\",\n                  children: \"Confirm Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  className: \"form-control\",\n                  placeholder: \"Confirm Password\",\n                  name: \"password_confirmation\",\n                  onChange: this.handleInputChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 25\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"help-block\",\n                  children: validation.password_confirmation.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 170\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: this.handleFormSubmit,\n                className: \"btn btn-primary\",\n                children: \" Submit \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"switch_form\",\n              children: [\"Have an account ? \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 62\n              }, this), \" Sign in\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 1\n    }, this);\n  }\n\n}\n\nexport default RegisterForm;","map":{"version":3,"sources":["/var/www/html/JOR/test_react/src/components/RegisterForm.js"],"names":["React","Component","FormValidator","axios","$","RegisterForm","constructor","handleInputChange","event","preventDefault","setState","target","name","value","passwordMatch","confirmation","state","password","handleFormSubmit","validation","validator","validate","submitted","isValid","console","log","defaults","xsrfCookieName","xsrfHeaderName","post","username","email","then","res","field","method","validWhen","message","password_confirmation","valid","render","isInvalid"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport FormValidator from '../validation/FormValidator';\nimport axios from 'axios';\nimport $ from 'jquery';\n\nclass RegisterForm extends Component{\nconstructor(){\nsuper();\nthis.validator = new FormValidator([{\n    field: 'username',\n    method: 'isEmpty',\n    validWhen: false,\n    message: 'Enter username.'\n}, {\n    field: 'email',\n    method: 'isEmpty',\n    validWhen: false,\n    message: 'Enter your email.'\n}, {\n    field: 'password',\n    method: 'isEmpty',\n    validWhen: false,\n    message: 'Enter password.'\n}, {\n    field: 'password_confirmation',\n    method: this.passwordMatch,\n    validWhen: true,\n    message: 'Enter password confirmation.'\n}\n]);\n\nthis.state = {\nusername: '',\nemail: '',\npassword: '',\npassword_confirmation: '',\nvalidation: this.validator.valid()\n}\nthis.submitted = false;\n}\nhandleInputChange = event => {\nevent.preventDefault();\nthis.setState({\n[event.target.name]: event.target.value,\n});\n}\npasswordMatch = (confirmation, state) => (state.password === confirmation);\nhandleFormSubmit = event => {\nevent.preventDefault();\nconst validation = this.validator.validate(this.state);\n// console.log(this.props.id_desc);\nthis.setState({\nvalidation\n});\nthis.submitted = true;\nif(validation.isValid) {\n    console.log(\"Registration form valid\");\n\n    axios.defaults.xsrfCookieName = 'csrftoken';\n    axios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\n    axios.post(`http://127.0.0.1:8000/api/user_register/`+ this.state.username + \"/\" + this.state.email + \"/\" + this.state.password)\n    .then(res => {\n        console.log(res);\n    }).then(res => {\n        console.log(\"Done !\");\n    })\n}else {\n    console.log(\"Form register failled\");\n}\n}\nrender() {\nlet validation = this.submitted ?this.validator.validate(this.state) : this.state.validation\nreturn (\n<div>\n    <div className=\"container form_register form\">\n        <div className=\"row\"> \n            <div>\n                <form className=\"registrationForm\">\n                <h2>Register</h2> \n                    <div className={validation.username.isInvalid ? 'has-error' : null}>\n                        <label htmlFor=\"username\">Username</label>\n                        <input type=\"string\" className=\"form-control\" name=\"username\" placeholder=\"Username\" onChange={this.handleInputChange} /> <span className=\"help-block\">{validation.username.message}</span> \n                    </div>\n                    \n                    <div className={validation.email.isInvalid ? 'has-error' : null}>\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"string\" className=\"form-control\" name=\"email\" placeholder=\"Email\" onChange={this.handleInputChange} /> <span className=\"help-block\">{validation.email.message}</span> \n                    </div>\n                    <div className={validation.password.isInvalid ? 'has-error' : null}>\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" className=\"form-control\" placeholder=\"Password\" name=\"password\" onChange={this.handleInputChange} /> <span className=\"help-block\">{validation.password.message}</span> </div>\n                    <div className={validation.password_confirmation.isInvalid ? 'has-error' : null}>\n                        <label htmlFor=\"password_confirmation\">Confirm Password</label>\n                        <input type=\"password\" className=\"form-control\" placeholder=\"Confirm Password\" name=\"password_confirmation\" onChange={this.handleInputChange} /> <span className=\"help-block\">{validation.password_confirmation.message}</span> \n                    </div>\n\n                <button onClick={this.handleFormSubmit} className=\"btn btn-primary\"> Submit </button>\n                </form>\n                <p className=\"switch_form\">Have an account ? <br/> Sign in</p>\n            </div>\n        </div>\n    </div>\n\n</div>\n)\n}\n}\nexport default RegisterForm;"]},"metadata":{},"sourceType":"module"}