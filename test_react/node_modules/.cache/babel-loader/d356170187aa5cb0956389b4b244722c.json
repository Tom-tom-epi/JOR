{"ast":null,"code":"var _jsxFileName = \"/var/www/html/JOR/test_react/src/components/RegisterForm.js\";\nimport React, { Component } from 'react';\nimport FormValidator from '../validation/FormValidator';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass RegisterForm extends Component {\n  constructor() {\n    super();\n\n    this.handleInputChange = event => {\n      event.preventDefault();\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.selectType = label_class => {\n      $(\".form_check_label\").removeClass(\"active\");\n      $(\".\" + label_class).addClass(\"active\");\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n      const validation = this.validator.validate(this.state); // console.log(this.props.id_desc);\n\n      this.setState({\n        validation\n      });\n      this.submitted = true;\n\n      if (validation.isValid) {\n        // console.log(\"Validated Item Form !\");\n        axios.defaults.xsrfCookieName = 'csrftoken';\n        axios.defaults.xsrfHeaderName = 'X-CSRFToken';\n        axios.get(`http://127.0.0.1:8000/user/item_create/` + this.state.item_name + \"/\" + this.state.item_effect + \"/\" + this.state.type_object + \"/\" + this.props.id_desc + \"/\" + this.state.item_nbr).then(res => {// console.log(res);\n          // this.setState({ updateInventory: !this.state.updateInventory });\n        }).then(res => {// this.props.handler();\n        });\n      }\n    };\n\n    this.validator = new FormValidator([{\n      field: 'username',\n      method: 'isEmpty',\n      validWhen: false,\n      message: 'Enter username.'\n    }, {\n      field: 'email',\n      method: 'isEmpty',\n      validWhen: false,\n      message: 'Enter your email.'\n    }, {\n      field: 'password',\n      method: 'isEmpty',\n      validWhen: false,\n      message: 'Enter password.'\n    }, {\n      field: 'password_confirmation',\n      method: this.passwordMatch,\n      validWhen: false,\n      message: 'Enter password confirmation.'\n    }]);\n    this.state = {\n      username: '',\n      email: '',\n      password: '',\n      validation: this.validator.valid()\n    };\n    this.submitted = false;\n  }\n\n  render() {\n    let validation = this.submitted ? this.validator.validate(this.state) : this.state.validation;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container form_register form\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"registrationForm\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"New item\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: validation.username.isInvalid ? 'has-error' : null,\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"item_name\",\n                  children: \"Item name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"string\",\n                  className: \"form-control\",\n                  name: \"item_name\",\n                  placeholder: \"Item Name\",\n                  onChange: this.handleInputChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 25\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"help-block\",\n                  children: validation.username.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 149\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: validation.email.isInvalid ? 'has-error' : null,\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"email\",\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"string\",\n                  className: \"form-control\",\n                  name: \"email\",\n                  placeholder: \"Email\",\n                  onChange: this.handleInputChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 25\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"help-block\",\n                  children: validation.email.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 141\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: validation.password.isInvalid && 'has-error',\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"password\",\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  className: \"form-control\",\n                  placeholder: \"Password\",\n                  name: \"password\",\n                  onChange: this.handleInputChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 25\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"help-block\",\n                  children: validation.password.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 149\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: validation.password_confirmation.isInvalid && 'has-error',\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"password_confirmation\",\n                  children: \"Confirm Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  className: \"form-control\",\n                  placeholder: \"Confirm Password\",\n                  name: \"password_confirmation\",\n                  onChange: this.handleInputChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 25\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"help-block\",\n                  children: validation.password_confirmation.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 170\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: this.handleFormSubmit,\n                className: \"btn btn-primary\",\n                children: \" Create item \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 1\n    }, this);\n  }\n\n}\n\nexport default RegisterForm;","map":{"version":3,"sources":["/var/www/html/JOR/test_react/src/components/RegisterForm.js"],"names":["React","Component","FormValidator","axios","RegisterForm","constructor","handleInputChange","event","preventDefault","setState","target","name","value","selectType","label_class","$","removeClass","addClass","handleFormSubmit","validation","validator","validate","state","submitted","isValid","defaults","xsrfCookieName","xsrfHeaderName","get","item_name","item_effect","type_object","props","id_desc","item_nbr","then","res","field","method","validWhen","message","passwordMatch","username","email","password","valid","render","isInvalid","password_confirmation"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport FormValidator from '../validation/FormValidator';\nimport axios from 'axios';\n\nclass RegisterForm extends Component{\nconstructor(){\nsuper();\nthis.validator = new FormValidator([{\n    field: 'username',\n    method: 'isEmpty',\n    validWhen: false,\n    message: 'Enter username.'\n}, {\n    field: 'email',\n    method: 'isEmpty',\n    validWhen: false,\n    message: 'Enter your email.'\n}, {\n    field: 'password',\n    method: 'isEmpty',\n    validWhen: false,\n    message: 'Enter password.'\n}, {\n    field: 'password_confirmation',\n    method: this.passwordMatch,\n    validWhen: false,\n    message: 'Enter password confirmation.'\n}\n]);\n\nthis.state = {\nusername: '',\nemail: '',\npassword: '',\nvalidation: this.validator.valid()\n}\nthis.submitted = false;\n}\nhandleInputChange = event => {\nevent.preventDefault();\nthis.setState({\n[event.target.name]: event.target.value,\n});\n}\nselectType = (label_class) => {\n    $(\".form_check_label\").removeClass(\"active\");\n    $(\".\" + label_class).addClass(\"active\");\n}\nhandleFormSubmit = event => {\nevent.preventDefault();\nconst validation = this.validator.validate(this.state);\n// console.log(this.props.id_desc);\nthis.setState({\nvalidation\n});\nthis.submitted = true;\nif(validation.isValid) {\n    // console.log(\"Validated Item Form !\");\n\n    axios.defaults.xsrfCookieName = 'csrftoken';\n    axios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\n    axios.get(`http://127.0.0.1:8000/user/item_create/`+ this.state.item_name + \"/\" + this.state.item_effect + \"/\" + this.state.type_object + \"/\" + this.props.id_desc + \"/\" + this.state.item_nbr)\n    .then(res => {\n        // console.log(res);\n        // this.setState({ updateInventory: !this.state.updateInventory });\n    }).then(res => {\n        // this.props.handler();\n    })\n}\n}\nrender() {\nlet validation = this.submitted ?this.validator.validate(this.state) : this.state.validation\nreturn (\n<div>\n    <div className=\"container form_register form\">\n        <div className=\"row\">\n            <div>\n                <form className=\"registrationForm\">\n                <h2>New item</h2>\n                    <div className={validation.username.isInvalid ? 'has-error' : null}>\n                        <label htmlFor=\"item_name\">Item name</label>\n                        <input type=\"string\" className=\"form-control\" name=\"item_name\" placeholder=\"Item Name\" onChange={this.handleInputChange} /> <span className=\"help-block\">{validation.username.message}</span> \n                    </div>\n                    \n                    <div className={validation.email.isInvalid ? 'has-error' : null}>\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"string\" className=\"form-control\" name=\"email\" placeholder=\"Email\" onChange={this.handleInputChange} /> <span className=\"help-block\">{validation.email.message}</span> \n                    </div>\n                    <div className={validation.password.isInvalid && 'has-error'}>\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" className=\"form-control\" placeholder=\"Password\" name=\"password\" onChange={this.handleInputChange} /> <span className=\"help-block\">{validation.password.message}</span> </div>\n                    <div className={validation.password_confirmation.isInvalid && 'has-error'}>\n                        <label htmlFor=\"password_confirmation\">Confirm Password</label>\n                        <input type=\"password\" className=\"form-control\" placeholder=\"Confirm Password\" name=\"password_confirmation\" onChange={this.handleInputChange} /> <span className=\"help-block\">{validation.password_confirmation.message}</span> \n                    </div>\n\n                <button onClick={this.handleFormSubmit} className=\"btn btn-primary\"> Create item </button>\n                </form>\n            </div>\n        </div>\n    </div>\n\n</div>\n)\n}\n}\nexport default RegisterForm;"]},"metadata":{},"sourceType":"module"}